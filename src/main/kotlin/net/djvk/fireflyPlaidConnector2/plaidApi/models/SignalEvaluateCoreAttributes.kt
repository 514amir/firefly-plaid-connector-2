/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * The core attributes object contains additional data that can be used to assess the ACH return risk. Examples of data include:  `days_since_first_plaid_connection`: The number of days since the first time the Item was connected to an application via Plaid `plaid_connections_count_7d`: The number of times the Item has been connected to applications via Plaid over the past 7 days `plaid_connections_count_30d`: The number of times the Item has been connected to applications via Plaid over the past 30 days `total_plaid_connections_count`: The number of times the Item has been connected to applications via Plaid `is_savings_or_money_market_account`: Indicates whether the ACH transaction funding account is a savings/money market account  For the full list and detailed documentation of core attributes available, or to request that core attributes not be returned, contact Sales or your Plaid account manager
 *
 * @param unauthorizedTransactionsCount7d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited.
 * @param unauthorizedTransactionsCount30d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited.
 * @param unauthorizedTransactionsCount60d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited.
 * @param unauthorizedTransactionsCount90d We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited.
 * @param nsfOverdraftTransactionsCount7d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited.
 * @param nsfOverdraftTransactionsCount30d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited.
 * @param nsfOverdraftTransactionsCount60d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited.
 * @param nsfOverdraftTransactionsCount90d We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited.
 * @param daysSinceFirstPlaidConnection The number of days since the first time the Item was connected to an application via Plaid
 * @param plaidConnectionsCount7d The number of times the Item has been connected to applications via Plaid over the past 7 days
 * @param plaidConnectionsCount30d The number of times the Item has been connected to applications via Plaid over the past 30 days
 * @param totalPlaidConnectionsCount The total number of times the Item has been connected to applications via Plaid
 * @param isSavingsOrMoneyMarketAccount Indicates if the ACH transaction funding account is a savings/money market account
 * @param totalCreditTransactionsAmount10d The total credit (inflow) transaction amount over the past 10 days from the account that will be debited
 * @param totalDebitTransactionsAmount10d The total debit (outflow) transaction amount over the past 10 days from the account that will be debited
 * @param p50CreditTransactionsAmount28d The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
 * @param p50DebitTransactionsAmount28d The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
 * @param p95CreditTransactionsAmount28d The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited
 * @param p95DebitTransactionsAmount28d The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited
 * @param daysWithNegativeBalanceCount90d The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance
 * @param p90EodBalance30d The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
 * @param p90EodBalance60d The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
 * @param p90EodBalance90d The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
 * @param p10EodBalance30d The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
 * @param p10EodBalance60d The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
 * @param p10EodBalance90d The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
 * @param availableBalance Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account.
 * @param currentBalance Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account.
 * @param balanceLastUpdated Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated.
 * @param phoneChangeCount28d The number of times the account's phone numbers on file have changed over the past 28 days
 * @param phoneChangeCount90d The number of times the account's phone numbers on file have changed over the past 90 days
 * @param emailChangeCount28d The number of times the account's email addresses on file have changed over the past 28 days
 * @param emailChangeCount90d The number of times the account's email addresses on file have changed over the past 90 days
 * @param addressChangeCount28d The number of times the account's addresses on file have changed over the past 28 days
 * @param addressChangeCount90d The number of times the account's addresses on file have changed over the past 90 days
 * @param plaidNonOauthAuthenticationAttemptsCount3d The number of non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
 * @param plaidNonOauthAuthenticationAttemptsCount7d The number of non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
 * @param plaidNonOauthAuthenticationAttemptsCount30d The number of non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
 * @param failedPlaidNonOauthAuthenticationAttemptsCount3d The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 3 days
 * @param failedPlaidNonOauthAuthenticationAttemptsCount7d The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 7 days
 * @param failedPlaidNonOauthAuthenticationAttemptsCount30d The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 30 days
 * @param debitTransactionsCount10d The total number of debit (outflow) transactions over the past 10 days from the account that will be debited
 * @param creditTransactionsCount10d The total number of credit (inflow) transactions over the past 10 days from the account that will be debited
 * @param debitTransactionsCount30d The total number of debit (outflow) transactions over the past 30 days from the account that will be debited
 * @param creditTransactionsCount30d The total number of credit (inflow) transactions over the past 30 days from the account that will be debited
 * @param debitTransactionsCount60d The total number of debit (outflow) transactions over the past 60 days from the account that will be debited
 * @param creditTransactionsCount60d The total number of credit (inflow) transactions over the past 60 days from the account that will be debited
 * @param debitTransactionsCount90d The total number of debit (outflow) transactions over the past 90 days from the account that will be debited
 * @param creditTransactionsCount90d The total number of credit (inflow) transactions over the past 90 days from the account that will be debited
 * @param totalDebitTransactionsAmount30d The total debit (outflow) transaction amount over the past 30 days from the account that will be debited
 * @param totalCreditTransactionsAmount30d The total credit (inflow) transaction amount over the past 30 days from the account that will be debited
 * @param totalDebitTransactionsAmount60d The total debit (outflow) transaction amount over the past 60 days from the account that will be debited
 * @param totalCreditTransactionsAmount60d The total credit (inflow) transaction amount over the past 60 days from the account that will be debited
 * @param totalDebitTransactionsAmount90d The total debit (outflow) transaction amount over the past 90 days from the account that will be debited
 * @param totalCreditTransactionsAmount90d The total credit (inflow) transaction amount over the past 90 days from the account that will be debited
 * @param p50EodBalance30d The 50th percentile of the end-of-day available balance over the past 30 days of the account that will be debited
 * @param p50EodBalance60d The 50th percentile of the end-of-day available balance over the past 60 days of the account that will be debited
 * @param p50EodBalance90d The 50th percentile of the end-of-day available balance over the past 90 days of the account that will be debited
 * @param p50EodBalance31dTo60d The 50th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
 * @param p50EodBalance61dTo90d The 50th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
 * @param p90EodBalance31dTo60d The 90th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
 * @param p90EodBalance61dTo90d The 90th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
 * @param p10EodBalance31dTo60d The 10th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited
 * @param p10EodBalance61dTo90d The 10th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited
 */

data class SignalEvaluateCoreAttributes(

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 7 days from the account that will be debited. */
    @field:JsonProperty("unauthorized_transactions_count_7d")
    val unauthorizedTransactionsCount7d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 30 days from the account that will be debited. */
    @field:JsonProperty("unauthorized_transactions_count_30d")
    val unauthorizedTransactionsCount30d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 60 days from the account that will be debited. */
    @field:JsonProperty("unauthorized_transactions_count_60d")
    val unauthorizedTransactionsCount60d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to unauthorized transactions over the past 90 days from the account that will be debited. */
    @field:JsonProperty("unauthorized_transactions_count_90d")
    val unauthorizedTransactionsCount90d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 7 days from the account that will be debited. */
    @field:JsonProperty("nsf_overdraft_transactions_count_7d")
    val nsfOverdraftTransactionsCount7d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 30 days from the account that will be debited. */
    @field:JsonProperty("nsf_overdraft_transactions_count_30d")
    val nsfOverdraftTransactionsCount30d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 60 days from the account that will be debited. */
    @field:JsonProperty("nsf_overdraft_transactions_count_60d")
    val nsfOverdraftTransactionsCount60d: kotlin.Int? = null,

    /* We parse and analyze historical transaction metadata to identify the number of possible past returns due to non-sufficient funds/overdrafts over the past 90 days from the account that will be debited. */
    @field:JsonProperty("nsf_overdraft_transactions_count_90d")
    val nsfOverdraftTransactionsCount90d: kotlin.Int? = null,

    /* The number of days since the first time the Item was connected to an application via Plaid */
    @field:JsonProperty("days_since_first_plaid_connection")
    val daysSinceFirstPlaidConnection: kotlin.Int? = null,

    /* The number of times the Item has been connected to applications via Plaid over the past 7 days */
    @field:JsonProperty("plaid_connections_count_7d")
    val plaidConnectionsCount7d: kotlin.Int? = null,

    /* The number of times the Item has been connected to applications via Plaid over the past 30 days */
    @field:JsonProperty("plaid_connections_count_30d")
    val plaidConnectionsCount30d: kotlin.Int? = null,

    /* The total number of times the Item has been connected to applications via Plaid */
    @field:JsonProperty("total_plaid_connections_count")
    val totalPlaidConnectionsCount: kotlin.Int? = null,

    /* Indicates if the ACH transaction funding account is a savings/money market account */
    @field:JsonProperty("is_savings_or_money_market_account")
    val isSavingsOrMoneyMarketAccount: kotlin.Boolean? = null,

    /* The total credit (inflow) transaction amount over the past 10 days from the account that will be debited */
    @field:JsonProperty("total_credit_transactions_amount_10d")
    val totalCreditTransactionsAmount10d: kotlin.Double? = null,

    /* The total debit (outflow) transaction amount over the past 10 days from the account that will be debited */
    @field:JsonProperty("total_debit_transactions_amount_10d")
    val totalDebitTransactionsAmount10d: kotlin.Double? = null,

    /* The 50th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited */
    @field:JsonProperty("p50_credit_transactions_amount_28d")
    val p50CreditTransactionsAmount28d: kotlin.Double? = null,

    /* The 50th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited */
    @field:JsonProperty("p50_debit_transactions_amount_28d")
    val p50DebitTransactionsAmount28d: kotlin.Double? = null,

    /* The 95th percentile of all credit (inflow) transaction amounts over the past 28 days from the account that will be debited */
    @field:JsonProperty("p95_credit_transactions_amount_28d")
    val p95CreditTransactionsAmount28d: kotlin.Double? = null,

    /* The 95th percentile of all debit (outflow) transaction amounts over the past 28 days from the account that will be debited */
    @field:JsonProperty("p95_debit_transactions_amount_28d")
    val p95DebitTransactionsAmount28d: kotlin.Double? = null,

    /* The number of days within the past 90 days when the account that will be debited had a negative end-of-day available balance */
    @field:JsonProperty("days_with_negative_balance_count_90d")
    val daysWithNegativeBalanceCount90d: kotlin.Int? = null,

    /* The 90th percentile of the end-of-day available balance over the past 30 days of the account that will be debited */
    @field:JsonProperty("p90_eod_balance_30d")
    val p90EodBalance30d: kotlin.Double? = null,

    /* The 90th percentile of the end-of-day available balance over the past 60 days of the account that will be debited */
    @field:JsonProperty("p90_eod_balance_60d")
    val p90EodBalance60d: kotlin.Double? = null,

    /* The 90th percentile of the end-of-day available balance over the past 90 days of the account that will be debited */
    @field:JsonProperty("p90_eod_balance_90d")
    val p90EodBalance90d: kotlin.Double? = null,

    /* The 10th percentile of the end-of-day available balance over the past 30 days of the account that will be debited */
    @field:JsonProperty("p10_eod_balance_30d")
    val p10EodBalance30d: kotlin.Double? = null,

    /* The 10th percentile of the end-of-day available balance over the past 60 days of the account that will be debited */
    @field:JsonProperty("p10_eod_balance_60d")
    val p10EodBalance60d: kotlin.Double? = null,

    /* The 10th percentile of the end-of-day available balance over the past 90 days of the account that will be debited */
    @field:JsonProperty("p10_eod_balance_90d")
    val p10EodBalance90d: kotlin.Double? = null,

    /* Available balance, as of the `balance_last_updated` time. The available balance is the current balance less any outstanding holds or debits that have not yet posted to the account. */
    @field:JsonProperty("available_balance")
    val availableBalance: kotlin.Double? = null,

    /* Current balance, as of the `balance_last_updated` time. The current balance is the total amount of funds in the account. */
    @field:JsonProperty("current_balance")
    val currentBalance: kotlin.Double? = null,

    /* Timestamp in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DDTHH:mm:ssZ) indicating the last time that the balance for the given account has been updated. */
    @field:JsonProperty("balance_last_updated")
    val balanceLastUpdated: java.time.OffsetDateTime? = null,

    /* The number of times the account's phone numbers on file have changed over the past 28 days */
    @field:JsonProperty("phone_change_count_28d")
    val phoneChangeCount28d: kotlin.Int? = null,

    /* The number of times the account's phone numbers on file have changed over the past 90 days */
    @field:JsonProperty("phone_change_count_90d")
    val phoneChangeCount90d: kotlin.Int? = null,

    /* The number of times the account's email addresses on file have changed over the past 28 days */
    @field:JsonProperty("email_change_count_28d")
    val emailChangeCount28d: kotlin.Int? = null,

    /* The number of times the account's email addresses on file have changed over the past 90 days */
    @field:JsonProperty("email_change_count_90d")
    val emailChangeCount90d: kotlin.Int? = null,

    /* The number of times the account's addresses on file have changed over the past 28 days */
    @field:JsonProperty("address_change_count_28d")
    val addressChangeCount28d: kotlin.Int? = null,

    /* The number of times the account's addresses on file have changed over the past 90 days */
    @field:JsonProperty("address_change_count_90d")
    val addressChangeCount90d: kotlin.Int? = null,

    /* The number of non-OAuth authentication attempts via Plaid for this bank account over the past 3 days */
    @field:JsonProperty("plaid_non_oauth_authentication_attempts_count_3d")
    val plaidNonOauthAuthenticationAttemptsCount3d: kotlin.Int? = null,

    /* The number of non-OAuth authentication attempts via Plaid for this bank account over the past 7 days */
    @field:JsonProperty("plaid_non_oauth_authentication_attempts_count_7d")
    val plaidNonOauthAuthenticationAttemptsCount7d: kotlin.Int? = null,

    /* The number of non-OAuth authentication attempts via Plaid for this bank account over the past 30 days */
    @field:JsonProperty("plaid_non_oauth_authentication_attempts_count_30d")
    val plaidNonOauthAuthenticationAttemptsCount30d: kotlin.Int? = null,

    /* The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 3 days */
    @field:JsonProperty("failed_plaid_non_oauth_authentication_attempts_count_3d")
    val failedPlaidNonOauthAuthenticationAttemptsCount3d: kotlin.Int? = null,

    /* The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 7 days */
    @field:JsonProperty("failed_plaid_non_oauth_authentication_attempts_count_7d")
    val failedPlaidNonOauthAuthenticationAttemptsCount7d: kotlin.Int? = null,

    /* The number of failed non-OAuth authentication attempts via Plaid for this bank account over the past 30 days */
    @field:JsonProperty("failed_plaid_non_oauth_authentication_attempts_count_30d")
    val failedPlaidNonOauthAuthenticationAttemptsCount30d: kotlin.Int? = null,

    /* The total number of debit (outflow) transactions over the past 10 days from the account that will be debited */
    @field:JsonProperty("debit_transactions_count_10d")
    val debitTransactionsCount10d: kotlin.Int? = null,

    /* The total number of credit (inflow) transactions over the past 10 days from the account that will be debited */
    @field:JsonProperty("credit_transactions_count_10d")
    val creditTransactionsCount10d: kotlin.Int? = null,

    /* The total number of debit (outflow) transactions over the past 30 days from the account that will be debited */
    @field:JsonProperty("debit_transactions_count_30d")
    val debitTransactionsCount30d: kotlin.Int? = null,

    /* The total number of credit (inflow) transactions over the past 30 days from the account that will be debited */
    @field:JsonProperty("credit_transactions_count_30d")
    val creditTransactionsCount30d: kotlin.Int? = null,

    /* The total number of debit (outflow) transactions over the past 60 days from the account that will be debited */
    @field:JsonProperty("debit_transactions_count_60d")
    val debitTransactionsCount60d: kotlin.Int? = null,

    /* The total number of credit (inflow) transactions over the past 60 days from the account that will be debited */
    @field:JsonProperty("credit_transactions_count_60d")
    val creditTransactionsCount60d: kotlin.Int? = null,

    /* The total number of debit (outflow) transactions over the past 90 days from the account that will be debited */
    @field:JsonProperty("debit_transactions_count_90d")
    val debitTransactionsCount90d: kotlin.Int? = null,

    /* The total number of credit (inflow) transactions over the past 90 days from the account that will be debited */
    @field:JsonProperty("credit_transactions_count_90d")
    val creditTransactionsCount90d: kotlin.Int? = null,

    /* The total debit (outflow) transaction amount over the past 30 days from the account that will be debited */
    @field:JsonProperty("total_debit_transactions_amount_30d")
    val totalDebitTransactionsAmount30d: kotlin.Double? = null,

    /* The total credit (inflow) transaction amount over the past 30 days from the account that will be debited */
    @field:JsonProperty("total_credit_transactions_amount_30d")
    val totalCreditTransactionsAmount30d: kotlin.Double? = null,

    /* The total debit (outflow) transaction amount over the past 60 days from the account that will be debited */
    @field:JsonProperty("total_debit_transactions_amount_60d")
    val totalDebitTransactionsAmount60d: kotlin.Double? = null,

    /* The total credit (inflow) transaction amount over the past 60 days from the account that will be debited */
    @field:JsonProperty("total_credit_transactions_amount_60d")
    val totalCreditTransactionsAmount60d: kotlin.Double? = null,

    /* The total debit (outflow) transaction amount over the past 90 days from the account that will be debited */
    @field:JsonProperty("total_debit_transactions_amount_90d")
    val totalDebitTransactionsAmount90d: kotlin.Double? = null,

    /* The total credit (inflow) transaction amount over the past 90 days from the account that will be debited */
    @field:JsonProperty("total_credit_transactions_amount_90d")
    val totalCreditTransactionsAmount90d: kotlin.Double? = null,

    /* The 50th percentile of the end-of-day available balance over the past 30 days of the account that will be debited */
    @field:JsonProperty("p50_eod_balance_30d")
    val p50EodBalance30d: kotlin.Double? = null,

    /* The 50th percentile of the end-of-day available balance over the past 60 days of the account that will be debited */
    @field:JsonProperty("p50_eod_balance_60d")
    val p50EodBalance60d: kotlin.Double? = null,

    /* The 50th percentile of the end-of-day available balance over the past 90 days of the account that will be debited */
    @field:JsonProperty("p50_eod_balance_90d")
    val p50EodBalance90d: kotlin.Double? = null,

    /* The 50th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p50_eod_balance_31d_to_60d")
    val p50EodBalance31dTo60d: kotlin.Double? = null,

    /* The 50th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p50_eod_balance_61d_to_90d")
    val p50EodBalance61dTo90d: kotlin.Double? = null,

    /* The 90th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p90_eod_balance_31d_to_60d")
    val p90EodBalance31dTo60d: kotlin.Double? = null,

    /* The 90th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p90_eod_balance_61d_to_90d")
    val p90EodBalance61dTo90d: kotlin.Double? = null,

    /* The 10th percentile of the end-of-day available balance between day 31 and day 60 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p10_eod_balance_31d_to_60d")
    val p10EodBalance31dTo60d: kotlin.Double? = null,

    /* The 10th percentile of the end-of-day available balance between day 61 and day 90 over the past 60 days of the account that will be debited */
    @field:JsonProperty("p10_eod_balance_61d_to_90d")
    val p10EodBalance61dTo90d: kotlin.Double? = null

)

