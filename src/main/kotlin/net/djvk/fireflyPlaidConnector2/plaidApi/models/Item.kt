/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Metadata about the Item.
 *
 * @param itemId The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive.
 * @param webhook The URL registered to receive webhooks for the Item.
 * @param error
 * @param availableProducts A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`.
 * @param billedProducts A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.
 * @param consentExpirationTime The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.  Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.
 * @param updateType Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.  `background` - Item can be updated in the background  `user_present_required` - Item requires user interaction to be updated
 * @param institutionId The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits.
 * @param products A list of authorized products for the Item.
 * @param consentedProducts Beta: A list of products that have gone through consent collection for the Item. Only present for those enabled in the beta.
 */

data class Item(

    /* The Plaid Item ID. The `item_id` is always unique; linking the same account at the same institution twice will result in two Items with different `item_id` values. Like all Plaid identifiers, the `item_id` is case-sensitive. */
    @field:JsonProperty("item_id")
    val itemId: kotlin.String,

    /* The URL registered to receive webhooks for the Item. */
    @field:JsonProperty("webhook")
    val webhook: kotlin.String?,

    @field:JsonProperty("error")
    val error: PlaidError?,

    /* A list of products available for the Item that have not yet been accessed. The contents of this array will be mutually exclusive with `billed_products`. */
    @field:JsonProperty("available_products")
    val availableProducts: kotlin.collections.List<Products>,

    /* A list of products that have been billed for the Item. The contents of this array will be mutually exclusive with `available_products`. Note - `billed_products` is populated in all environments but only requests in Production are billed. Also note that products that are billed on a pay-per-call basis rather than a pay-per-Item basis, such as `balance`, will not appear here.  */
    @field:JsonProperty("billed_products")
    val billedProducts: kotlin.collections.List<Products>,

    /* The RFC 3339 timestamp after which the consent provided by the end user will expire. Upon consent expiration, the item will enter the `ITEM_LOGIN_REQUIRED` error state. To circumvent the `ITEM_LOGIN_REQUIRED` error and maintain continuous consent, the end user can reauthenticate via Link’s update mode in advance of the consent expiration time.  Note - This is only relevant for certain OAuth-based institutions. For all other institutions, this field will be null.  */
    @field:JsonProperty("consent_expiration_time")
    val consentExpirationTime: java.time.OffsetDateTime?,

    /* Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.  `background` - Item can be updated in the background  `user_present_required` - Item requires user interaction to be updated */
    @field:JsonProperty("update_type")
    val updateType: Item.UpdateType,

    /* The Plaid Institution ID associated with the Item. Field is `null` for Items created via Same Day Micro-deposits. */
    @field:JsonProperty("institution_id")
    val institutionId: kotlin.String? = null,

    /* A list of authorized products for the Item.  */
    @field:JsonProperty("products")
    val products: kotlin.collections.List<Products>? = null,

    /* Beta: A list of products that have gone through consent collection for the Item. Only present for those enabled in the beta.  */
    @field:JsonProperty("consented_products")
    val consentedProducts: kotlin.collections.List<Products>? = null

) : kotlin.collections.HashMap<String, kotlin.Any>() {

    /**
     * Indicates whether an Item requires user interaction to be updated, which can be the case for Items with some forms of two-factor authentication.  `background` - Item can be updated in the background  `user_present_required` - Item requires user interaction to be updated
     *
     * Values: background,userPresentRequired
     */
    enum class UpdateType(val value: kotlin.String) {
        @JsonProperty(value = "background")
        background("background"),
        @JsonProperty(value = "user_present_required")
        userPresentRequired("user_present_required");
    }
}

