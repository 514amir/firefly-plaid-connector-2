/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * An object representing the repayment plan for the student loan
 *
 * @param description The description of the repayment plan as provided by the servicer.
 * @param type The type of the repayment plan.
 */

data class StudentRepaymentPlan(

    /* The description of the repayment plan as provided by the servicer. */
    @field:JsonProperty("description")
    val description: kotlin.String?,

    /* The type of the repayment plan. */
    @field:JsonProperty("type")
    val type: StudentRepaymentPlan.Type?

) : kotlin.collections.HashMap<String, kotlin.Any>() {

    /**
     * The type of the repayment plan.
     *
     * Values: extendedGraduated,extendedStandard,graduated,incomeMinusContingentRepayment,incomeMinusBasedRepayment,interestMinusOnly,other,payAsYouEarn,revisedPayAsYouEarn,standard
     */
    enum class Type(val value: kotlin.String) {
        @JsonProperty(value = "extended graduated")
        extendedGraduated("extended graduated"),
        @JsonProperty(value = "extended standard")
        extendedStandard("extended standard"),
        @JsonProperty(value = "graduated")
        graduated("graduated"),
        @JsonProperty(value = "income-contingent repayment")
        incomeMinusContingentRepayment("income-contingent repayment"),
        @JsonProperty(value = "income-based repayment")
        incomeMinusBasedRepayment("income-based repayment"),
        @JsonProperty(value = "interest-only")
        interestMinusOnly("interest-only"),
        @JsonProperty(value = "other")
        other("other"),
        @JsonProperty(value = "pay as you earn")
        payAsYouEarn("pay as you earn"),
        @JsonProperty(value = "revised pay as you earn")
        revisedPayAsYouEarn("revised pay as you earn"),
        @JsonProperty(value = "standard")
        standard("standard");
    }
}

