/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Shorthand identifier for a specific screening list for entities.
 *
 * Values: cACON,eUCON,iZSOE,iZUNC,uSCAP,uSFSE,uSMBS,uSSDN,uSSSI,uSCMC,uSUVL,aUCON,uKHMC
 */

enum class EntityWatchlistCode(val value: kotlin.String) {

    @JsonProperty(value = "CA_CON")
    cACON("CA_CON"),

    @JsonProperty(value = "EU_CON")
    eUCON("EU_CON"),

    @JsonProperty(value = "IZ_SOE")
    iZSOE("IZ_SOE"),

    @JsonProperty(value = "IZ_UNC")
    iZUNC("IZ_UNC"),

    @JsonProperty(value = "US_CAP")
    uSCAP("US_CAP"),

    @JsonProperty(value = "US_FSE")
    uSFSE("US_FSE"),

    @JsonProperty(value = "US_MBS")
    uSMBS("US_MBS"),

    @JsonProperty(value = "US_SDN")
    uSSDN("US_SDN"),

    @JsonProperty(value = "US_SSI")
    uSSSI("US_SSI"),

    @JsonProperty(value = "US_CMC")
    uSCMC("US_CMC"),

    @JsonProperty(value = "US_UVL")
    uSUVL("US_UVL"),

    @JsonProperty(value = "AU_CON")
    aUCON("AU_CON"),

    @JsonProperty(value = "UK_HMC")
    uKHMC("UK_HMC");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is EntityWatchlistCode) "$data" else null

        /**
         * Returns a valid [EntityWatchlistCode] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): EntityWatchlistCode? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

