/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Fired when the status of a payment has changed.
 *
 * @param webhookType `PAYMENT_INITIATION`
 * @param webhookCode `PAYMENT_STATUS_UPDATE`
 * @param paymentId The `payment_id` for the payment being updated
 * @param newPaymentStatus
 * @param oldPaymentStatus
 * @param originalReference The original value of the reference when creating the payment.
 * @param originalStartDate The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`.
 * @param adjustedStartDate The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`.
 * @param timestamp The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"`
 * @param adjustedReference The value of the reference sent to the bank after adjustment to pass bank validation rules.
 * @param error
 */

data class PaymentStatusUpdateWebhook(

    /* `PAYMENT_INITIATION` */
    @field:JsonProperty("webhook_type")
    val webhookType: kotlin.String,

    /* `PAYMENT_STATUS_UPDATE` */
    @field:JsonProperty("webhook_code")
    val webhookCode: kotlin.String,

    /* The `payment_id` for the payment being updated */
    @field:JsonProperty("payment_id")
    val paymentId: kotlin.String,

    @field:JsonProperty("new_payment_status")
    val newPaymentStatus: PaymentInitiationPaymentStatus,

    @field:JsonProperty("old_payment_status")
    val oldPaymentStatus: PaymentInitiationPaymentStatus,

    /* The original value of the reference when creating the payment. */
    @field:JsonProperty("original_reference")
    val originalReference: kotlin.String?,

    /* The original value of the `start_date` provided during the creation of a standing order. If the payment is not a standing order, this field will be `null`. */
    @field:JsonProperty("original_start_date")
    val originalStartDate: java.time.LocalDate?,

    /* The start date sent to the bank after adjusting for holidays or weekends.  Will be provided in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). If the start date did not require adjustment, or if the payment is not a standing order, this field will be `null`. */
    @field:JsonProperty("adjusted_start_date")
    val adjustedStartDate: java.time.LocalDate?,

    /* The timestamp of the update, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format, e.g. `\"2017-09-14T14:42:19.350Z\"` */
    @field:JsonProperty("timestamp")
    val timestamp: java.time.OffsetDateTime,

    /* The value of the reference sent to the bank after adjustment to pass bank validation rules. */
    @field:JsonProperty("adjusted_reference")
    val adjustedReference: kotlin.String? = null,

    @field:JsonProperty("error")
    val error: PlaidError? = null

) : kotlin.collections.HashMap<String, kotlin.Any>()

