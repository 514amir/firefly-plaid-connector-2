/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * The deposit switch destination account
 *
 * @param accountNumber Account number for deposit switch destination
 * @param routingNumber Routing number for deposit switch destination
 * @param accountName The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking.
 * @param accountSubtype The account subtype of the account, either `checking` or `savings`.
 */

data class DepositSwitchTargetAccount(

    /* Account number for deposit switch destination */
    @field:JsonProperty("account_number")
    val accountNumber: kotlin.String,

    /* Routing number for deposit switch destination */
    @field:JsonProperty("routing_number")
    val routingNumber: kotlin.String,

    /* The name of the deposit switch destination account, as it will be displayed to the end user in the Deposit Switch interface. It is not required to match the name used in online banking. */
    @field:JsonProperty("account_name")
    val accountName: kotlin.String,

    /* The account subtype of the account, either `checking` or `savings`. */
    @field:JsonProperty("account_subtype")
    val accountSubtype: DepositSwitchTargetAccount.AccountSubtype

) : kotlin.collections.HashMap<String, kotlin.Any>() {

    /**
     * The account subtype of the account, either `checking` or `savings`.
     *
     * Values: checking,savings
     */
    enum class AccountSubtype(val value: kotlin.String) {
        @JsonProperty(value = "checking")
        checking("checking"),
        @JsonProperty(value = "savings")
        savings("savings");
    }
}

