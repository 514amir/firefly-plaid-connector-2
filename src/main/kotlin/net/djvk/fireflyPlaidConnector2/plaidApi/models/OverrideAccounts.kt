/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Data to use to set values of test accounts. Some values cannot be specified in the schema and will instead will be calculated from other test data in order to achieve more consistent, realistic test data.
 *
 * @param type
 * @param subtype
 * @param startingBalance If provided, the account will start with this amount as the current balance.
 * @param forceAvailableBalance If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time.
 * @param currency ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default.
 * @param meta
 * @param numbers
 * @param transactions Specify the list of transactions on the account.
 * @param identity
 * @param liability
 * @param inflowModel
 * @param holdings
 * @param investmentTransactions
 * @param income
 */

data class OverrideAccounts(

    @field:JsonProperty("type")
    val type: OverrideAccountType,

    @field:JsonProperty("subtype")
    val subtype: AccountSubtype?,

    /* If provided, the account will start with this amount as the current balance.  */
    @field:JsonProperty("starting_balance")
    val startingBalance: kotlin.Double,

    /* If provided, the account will always have this amount as its  available balance, regardless of current balance or changes in transactions over time. */
    @field:JsonProperty("force_available_balance")
    val forceAvailableBalance: kotlin.Double,

    /* ISO-4217 currency code. If provided, the account will be denominated in the given currency. Transactions will also be in this currency by default. */
    @field:JsonProperty("currency")
    val currency: kotlin.String,

    @field:JsonProperty("meta")
    val meta: Meta,

    @field:JsonProperty("numbers")
    val numbers: Numbers,

    /* Specify the list of transactions on the account. */
    @field:JsonProperty("transactions")
    val transactions: kotlin.collections.List<TransactionOverride>,

    @field:JsonProperty("identity")
    val identity: OwnerOverride,

    @field:JsonProperty("liability")
    val liability: LiabilityOverride,

    @field:JsonProperty("inflow_model")
    val inflowModel: InflowModel,

    @field:JsonProperty("holdings")
    val holdings: HoldingsOverride? = null,

    @field:JsonProperty("investment_transactions")
    val investmentTransactions: InvestmentsTransactionsOverride? = null,

    @field:JsonProperty("income")
    val income: IncomeOverride? = null

) : kotlin.collections.HashMap<String, kotlin.Any>()

