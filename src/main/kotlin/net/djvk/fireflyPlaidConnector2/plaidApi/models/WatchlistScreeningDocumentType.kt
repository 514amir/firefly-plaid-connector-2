/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.plaidApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * The kind of official document represented by this object.  `birth_certificate` - A certificate of birth  `drivers_license` - A license to operate a motor vehicle  `immigration_number` - Immigration or residence documents  `military_id` - Identification issued by a military group  `other` - Any document not covered by other categories  `passport` - An official passport issue by a government  `personal_identification` - Any generic personal identification that is not covered by other categories  `ration_card` - Identification that entitles the holder to rations  `ssn` - United States Social Security Number  `student_id` - Identification issued by an educational institution  `tax_id` - Identification issued for the purpose of collecting taxes  `travel_document` - Visas, entry permits, refugee documents, etc.  `voter_id` - Identification issued for the purpose of voting
 *
 * Values: birthCertificate,driversLicense,immigrationNumber,militaryId,other,passport,personalIdentification,rationCard,ssn,studentId,taxId,travelDocument,voterId
 */

enum class WatchlistScreeningDocumentType(val value: kotlin.String) {

    @JsonProperty(value = "birth_certificate")
    birthCertificate("birth_certificate"),

    @JsonProperty(value = "drivers_license")
    driversLicense("drivers_license"),

    @JsonProperty(value = "immigration_number")
    immigrationNumber("immigration_number"),

    @JsonProperty(value = "military_id")
    militaryId("military_id"),

    @JsonProperty(value = "other")
    other("other"),

    @JsonProperty(value = "passport")
    passport("passport"),

    @JsonProperty(value = "personal_identification")
    personalIdentification("personal_identification"),

    @JsonProperty(value = "ration_card")
    rationCard("ration_card"),

    @JsonProperty(value = "ssn")
    ssn("ssn"),

    @JsonProperty(value = "student_id")
    studentId("student_id"),

    @JsonProperty(value = "tax_id")
    taxId("tax_id"),

    @JsonProperty(value = "travel_document")
    travelDocument("travel_document"),

    @JsonProperty(value = "voter_id")
    voterId("voter_id");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is WatchlistScreeningDocumentType) "$data" else null

        /**
         * Returns a valid [WatchlistScreeningDocumentType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): WatchlistScreeningDocumentType? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

