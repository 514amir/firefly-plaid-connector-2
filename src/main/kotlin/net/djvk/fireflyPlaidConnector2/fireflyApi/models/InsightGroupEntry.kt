/**
 * Firefly III API v1.5.6
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.fireflyApi.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 *
 *
 * @param id This ID is a reference to the original object.
 * @param name This is the name of the object.
 * @param difference The amount spent or earned between start date and end date, a number defined as a string, for this object and all asset accounts.
 * @param differenceFloat The amount spent or earned between start date and end date, a number as a float, for this object and all asset accounts. May have rounding errors.
 * @param currencyId The currency ID of the expenses listed for this account.
 * @param currencyCode The currency code of the expenses listed for this account.
 */

data class InsightGroupEntry(

    /* This ID is a reference to the original object. */
    @field:JsonProperty("id")
    val id: kotlin.String? = null,

    /* This is the name of the object. */
    @field:JsonProperty("name")
    val name: kotlin.String? = null,

    /* The amount spent or earned between start date and end date, a number defined as a string, for this object and all asset accounts. */
    @field:JsonProperty("difference")
    val difference: kotlin.String? = null,

    /* The amount spent or earned between start date and end date, a number as a float, for this object and all asset accounts. May have rounding errors. */
    @field:JsonProperty("difference_float")
    val differenceFloat: kotlin.Double? = null,

    /* The currency ID of the expenses listed for this account. */
    @field:JsonProperty("currency_id")
    val currencyId: kotlin.String? = null,

    /* The currency code of the expenses listed for this account. */
    @field:JsonProperty("currency_code")
    val currencyCode: kotlin.String? = null

)

