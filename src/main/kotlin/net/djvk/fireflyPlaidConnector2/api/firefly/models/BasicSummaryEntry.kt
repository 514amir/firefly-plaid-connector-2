/**
 * Firefly III API v1.5.6
 *
 * This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2022-04-04T03:54:41+00:00
 *
 * The version of the OpenAPI document: 1.5.6
 * Contact: james@firefly-iii.org
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.firefly.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 *
 *
 * @param key This is a reference to the type of info shared, not influenced by translations or user preferences. The EUR value is a reference to the currency code. Possibilities are: balance-in-ABC, spent-in-ABC, earned-in-ABC, bills-paid-in-ABC, bills-unpaid-in-ABC, left-to-spend-in-ABC and net-worth-in-ABC.
 * @param title A translated title for the information shared.
 * @param monetaryValue The amount as a float.
 * @param currencyId The currency ID of the associated currency.
 * @param currencyCode
 * @param currencySymbol
 * @param currencyDecimalPlaces Number of decimals for the associated currency.
 * @param valueParsed The amount formatted according to the users locale
 * @param localIcon Reference to a font-awesome icon without the fa- part.
 * @param subTitle A short explanation of the amounts origin. Already formatted according to the locale of the user or translated, if relevant.
 */

data class BasicSummaryEntry(

    /* This is a reference to the type of info shared, not influenced by translations or user preferences. The EUR value is a reference to the currency code. Possibilities are: balance-in-ABC, spent-in-ABC, earned-in-ABC, bills-paid-in-ABC, bills-unpaid-in-ABC, left-to-spend-in-ABC and net-worth-in-ABC. */
    @field:JsonProperty("key")
    val key: kotlin.String? = null,

    /* A translated title for the information shared. */
    @field:JsonProperty("title")
    val title: kotlin.String? = null,

    /* The amount as a float. */
    @field:JsonProperty("monetary_value")
    val monetaryValue: kotlin.Double? = null,

    /* The currency ID of the associated currency. */
    @field:JsonProperty("currency_id")
    val currencyId: kotlin.String? = null,

    @field:JsonProperty("currency_code")
    val currencyCode: kotlin.String? = null,

    @field:JsonProperty("currency_symbol")
    val currencySymbol: kotlin.String? = null,

    /* Number of decimals for the associated currency. */
    @field:JsonProperty("currency_decimal_places")
    val currencyDecimalPlaces: kotlin.Int? = null,

    /* The amount formatted according to the users locale */
    @field:JsonProperty("value_parsed")
    val valueParsed: kotlin.String? = null,

    /* Reference to a font-awesome icon without the fa- part. */
    @field:JsonProperty("local_icon")
    val localIcon: kotlin.String? = null,

    /* A short explanation of the amounts origin. Already formatted according to the locale of the user or translated, if relevant. */
    @field:JsonProperty("sub_title")
    val subTitle: kotlin.String? = null

)

