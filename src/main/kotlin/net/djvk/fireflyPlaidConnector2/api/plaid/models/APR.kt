/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Information about the APR on the account.
 *
 * @param aprPercentage Annual Percentage Rate applied.
 * @param aprType The type of balance to which the APR applies.
 * @param balanceSubjectToApr Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance.
 * @param interestChargeAmount Amount of money charged due to interest from last statement.
 */

data class APR(

    /* Annual Percentage Rate applied.  */
    @field:JsonProperty("apr_percentage")
    val aprPercentage: kotlin.Double,

    /* The type of balance to which the APR applies. */
    @field:JsonProperty("apr_type")
    val aprType: AprType,

    /* Amount of money that is subjected to the APR if a balance was carried beyond payment due date. How it is calculated can vary by card issuer. It is often calculated as an average daily balance. */
    @field:JsonProperty("balance_subject_to_apr")
    val balanceSubjectToApr: kotlin.Double?,

    /* Amount of money charged due to interest from last statement. */
    @field:JsonProperty("interest_charge_amount")
    val interestChargeAmount: kotlin.Double?

) : kotlin.collections.HashMap<String, kotlin.Any>() {

    /**
     * The type of balance to which the APR applies.
     *
     * Values: balanceTransferApr,cashApr,purchaseApr,special
     */
    enum class AprType(val value: kotlin.String) {
        @JsonProperty(value = "balance_transfer_apr")
        balanceTransferApr("balance_transfer_apr"),
        @JsonProperty(value = "cash_apr")
        cashApr("cash_apr"),
        @JsonProperty(value = "purchase_apr")
        purchaseApr("purchase_apr"),
        @JsonProperty(value = "special")
        special("special");
    }
}

