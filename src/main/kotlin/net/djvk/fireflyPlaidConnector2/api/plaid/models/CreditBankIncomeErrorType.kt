/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * A broad categorization of the error. Safe for programmatic use.
 *
 * Values: iNTERNALSERVERERROR,iNSUFFICIENTCREDENTIALS,iTEMLOCKED,uSERSETUPREQUIRED,cOUNTRYNOTSUPPORTED,iNSTITUTIONDOWN,iNSTITUTIONNOLONGERSUPPORTED,iNSTITUTIONNOTRESPONDING,iNVALIDCREDENTIALS,iNVALIDMFA,iNVALIDSENDMETHOD,iTEMLOGINREQUIRED,mFANOTSUPPORTED,nOACCOUNTS,iTEMNOTSUPPORTED,aCCESSNOTGRANTED
 */

enum class CreditBankIncomeErrorType(val value: kotlin.String) {

    @JsonProperty(value = "INTERNAL_SERVER_ERROR")
    iNTERNALSERVERERROR("INTERNAL_SERVER_ERROR"),

    @JsonProperty(value = "INSUFFICIENT_CREDENTIALS")
    iNSUFFICIENTCREDENTIALS("INSUFFICIENT_CREDENTIALS"),

    @JsonProperty(value = "ITEM_LOCKED")
    iTEMLOCKED("ITEM_LOCKED"),

    @JsonProperty(value = "USER_SETUP_REQUIRED")
    uSERSETUPREQUIRED("USER_SETUP_REQUIRED"),

    @JsonProperty(value = "COUNTRY_NOT_SUPPORTED")
    cOUNTRYNOTSUPPORTED("COUNTRY_NOT_SUPPORTED"),

    @JsonProperty(value = "INSTITUTION_DOWN")
    iNSTITUTIONDOWN("INSTITUTION_DOWN"),

    @JsonProperty(value = "INSTITUTION_NO_LONGER_SUPPORTED")
    iNSTITUTIONNOLONGERSUPPORTED("INSTITUTION_NO_LONGER_SUPPORTED"),

    @JsonProperty(value = "INSTITUTION_NOT_RESPONDING")
    iNSTITUTIONNOTRESPONDING("INSTITUTION_NOT_RESPONDING"),

    @JsonProperty(value = "INVALID_CREDENTIALS")
    iNVALIDCREDENTIALS("INVALID_CREDENTIALS"),

    @JsonProperty(value = "INVALID_MFA")
    iNVALIDMFA("INVALID_MFA"),

    @JsonProperty(value = "INVALID_SEND_METHOD")
    iNVALIDSENDMETHOD("INVALID_SEND_METHOD"),

    @JsonProperty(value = "ITEM_LOGIN_REQUIRED")
    iTEMLOGINREQUIRED("ITEM_LOGIN_REQUIRED"),

    @JsonProperty(value = "MFA_NOT_SUPPORTED")
    mFANOTSUPPORTED("MFA_NOT_SUPPORTED"),

    @JsonProperty(value = "NO_ACCOUNTS")
    nOACCOUNTS("NO_ACCOUNTS"),

    @JsonProperty(value = "ITEM_NOT_SUPPORTED")
    iTEMNOTSUPPORTED("ITEM_NOT_SUPPORTED"),

    @JsonProperty(value = "ACCESS_NOT_GRANTED")
    aCCESSNOTGRANTED("ACCESS_NOT_GRANTED");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is CreditBankIncomeErrorType) "$data" else null

        /**
         * Returns a valid [CreditBankIncomeErrorType] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): CreditBankIncomeErrorType? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

