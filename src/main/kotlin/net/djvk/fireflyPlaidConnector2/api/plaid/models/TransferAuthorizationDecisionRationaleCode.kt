/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * A code representing the rationale for approving or declining the proposed transfer. Possible values are:  `MANUALLY_VERIFIED_ITEM` – Item created via same-day micro deposits, limited information available. Plaid will offer `approved` as a transaction decision.  `LOGIN_REQUIRED` – Unable to collect the account information due to Item staleness. Can be rectified using Link in update mode. Plaid will offer `approved` as a transaction decision.  `ERROR` – Unable to collect the account information due to an error. Plaid will offer `approved` as a transaction decision.  `NSF` – Transaction likely to result in a return due to insufficient funds. Plaid will offer `declined` as a transaction decision.  `RISK` - Transaction is high-risk. Plaid will offer `declined` as a transaction decision.  `TRANSFER_LIMIT_REACHED` - One or several transfer limits are reached, e.g. monthly transfer limit. Plaid will offer `declined` as a transaction decision.
 *
 * Values: nSF,rISK,tRANSFERLIMITREACHED,mANUALLYVERIFIEDITEM,lOGINREQUIRED,eRROR
 */

enum class TransferAuthorizationDecisionRationaleCode(val value: kotlin.String) {

    @JsonProperty(value = "NSF")
    nSF("NSF"),

    @JsonProperty(value = "RISK")
    rISK("RISK"),

    @JsonProperty(value = "TRANSFER_LIMIT_REACHED")
    tRANSFERLIMITREACHED("TRANSFER_LIMIT_REACHED"),

    @JsonProperty(value = "MANUALLY_VERIFIED_ITEM")
    mANUALLYVERIFIEDITEM("MANUALLY_VERIFIED_ITEM"),

    @JsonProperty(value = "LOGIN_REQUIRED")
    lOGINREQUIRED("LOGIN_REQUIRED"),

    @JsonProperty(value = "ERROR")
    eRROR("ERROR");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? =
            if (data is TransferAuthorizationDecisionRationaleCode) "$data" else null

        /**
         * Returns a valid [TransferAuthorizationDecisionRationaleCode] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): TransferAuthorizationDecisionRationaleCode? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

