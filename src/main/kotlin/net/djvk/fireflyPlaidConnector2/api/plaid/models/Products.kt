/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * A list of products that an institution can support. All Items must be initialized with at least one product. The Balance product is always available and does not need to be specified during initialization.
 *
 * Values: assets,auth,balance,identity,investments,liabilities,paymentInitiation,identityVerification,transactions,creditDetails,income,incomeVerification,depositSwitch,standingOrders,transfer,employment,recurringTransactions
 */

enum class Products(val value: kotlin.String) {

    @JsonProperty(value = "assets")
    assets("assets"),

    @JsonProperty(value = "auth")
    auth("auth"),

    @JsonProperty(value = "balance")
    balance("balance"),

    @JsonProperty(value = "identity")
    identity("identity"),

    @JsonProperty(value = "investments")
    investments("investments"),

    @JsonProperty(value = "liabilities")
    liabilities("liabilities"),

    @JsonProperty(value = "payment_initiation")
    paymentInitiation("payment_initiation"),

    @JsonProperty(value = "identity_verification")
    identityVerification("identity_verification"),

    @JsonProperty(value = "transactions")
    transactions("transactions"),

    @JsonProperty(value = "credit_details")
    creditDetails("credit_details"),

    @JsonProperty(value = "income")
    income("income"),

    @JsonProperty(value = "income_verification")
    incomeVerification("income_verification"),

    @JsonProperty(value = "deposit_switch")
    depositSwitch("deposit_switch"),

    @JsonProperty(value = "standing_orders")
    standingOrders("standing_orders"),

    @JsonProperty(value = "transfer")
    transfer("transfer"),

    @JsonProperty(value = "employment")
    employment("employment"),

    @JsonProperty(value = "recurring_transactions")
    recurringTransactions("recurring_transactions");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Products) "$data" else null

        /**
         * Returns a valid [Products] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Products? = data?.let {
            val normalizedData = "$it".lowercase()
            values().firstOrNull { value ->
                it == value || normalizedData == "$value".lowercase()
            }
        }
    }
}

