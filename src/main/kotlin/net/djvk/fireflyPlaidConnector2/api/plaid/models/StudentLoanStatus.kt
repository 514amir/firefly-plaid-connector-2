/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * An object representing the status of the student loan
 *
 * @param endDate The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
 * @param type The status type of the student loan
 */

data class StudentLoanStatus(

    /* The date until which the loan will be in its current status. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).  */
    @field:JsonProperty("end_date")
    val endDate: java.time.LocalDate?,

    /* The status type of the student loan */
    @field:JsonProperty("type")
    val type: Type?

) : kotlin.collections.HashMap<String, kotlin.Any>() {

    /**
     * The status type of the student loan
     *
     * Values: cancelled,chargedOff,claim,consolidated,deferment,delinquent,discharged,extension,forbearance,inGrace,inMilitary,inSchool,notFullyDisbursed,other,paidInFull,refunded,repayment,transferred
     */
    enum class Type(val value: kotlin.String) {
        @JsonProperty(value = "cancelled")
        cancelled("cancelled"),
        @JsonProperty(value = "charged off")
        chargedOff("charged off"),
        @JsonProperty(value = "claim")
        claim("claim"),
        @JsonProperty(value = "consolidated")
        consolidated("consolidated"),
        @JsonProperty(value = "deferment")
        deferment("deferment"),
        @JsonProperty(value = "delinquent")
        delinquent("delinquent"),
        @JsonProperty(value = "discharged")
        discharged("discharged"),
        @JsonProperty(value = "extension")
        extension("extension"),
        @JsonProperty(value = "forbearance")
        forbearance("forbearance"),
        @JsonProperty(value = "in grace")
        inGrace("in grace"),
        @JsonProperty(value = "in military")
        inMilitary("in military"),
        @JsonProperty(value = "in school")
        inSchool("in school"),
        @JsonProperty(value = "not fully disbursed")
        notFullyDisbursed("not fully disbursed"),
        @JsonProperty(value = "other")
        other("other"),
        @JsonProperty(value = "paid in full")
        paidInFull("paid in full"),
        @JsonProperty(value = "refunded")
        refunded("refunded"),
        @JsonProperty(value = "repayment")
        repayment("repayment"),
        @JsonProperty(value = "transferred")
        transferred("transferred");
    }
}

