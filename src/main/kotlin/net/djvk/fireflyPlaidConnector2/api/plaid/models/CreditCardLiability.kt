/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * An object representing a credit card account.
 *
 * @param accountId The ID of the account that this liability belongs to.
 * @param aprs The various interest rates that apply to the account. APR information is not provided by all card issuers; if APR data is not available, this array will be empty.
 * @param isOverdue true if a payment is currently overdue. Availability for this field is limited.
 * @param lastPaymentAmount The amount of the last payment.
 * @param lastPaymentDate The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited.
 * @param lastStatementIssueDate The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
 * @param lastStatementBalance The total amount owed as of the last statement issued
 * @param minimumPaymentAmount The minimum payment due for the next billing cycle.
 * @param nextPaymentDueDate The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD).
 */

data class CreditCardLiability(

    /* The ID of the account that this liability belongs to. */
    @field:JsonProperty("account_id")
    val accountId: kotlin.String?,

    /* The various interest rates that apply to the account. APR information is not provided by all card issuers; if APR data is not available, this array will be empty. */
    @field:JsonProperty("aprs")
    val aprs: kotlin.collections.List<APR>,

    /* true if a payment is currently overdue. Availability for this field is limited. */
    @field:JsonProperty("is_overdue")
    val isOverdue: kotlin.Boolean?,

    /* The amount of the last payment. */
    @field:JsonProperty("last_payment_amount")
    val lastPaymentAmount: kotlin.Double?,

    /* The date of the last payment. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). Availability for this field is limited. */
    @field:JsonProperty("last_payment_date")
    val lastPaymentDate: java.time.LocalDate?,

    /* The date of the last statement. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). */
    @field:JsonProperty("last_statement_issue_date")
    val lastStatementIssueDate: java.time.LocalDate?,

    /* The total amount owed as of the last statement issued */
    @field:JsonProperty("last_statement_balance")
    val lastStatementBalance: kotlin.Double?,

    /* The minimum payment due for the next billing cycle. */
    @field:JsonProperty("minimum_payment_amount")
    val minimumPaymentAmount: kotlin.Double?,

    /* The due date for the next payment. The due date is `null` if a payment is not expected. Dates are returned in an [ISO 8601](https://wikipedia.org/wiki/ISO_8601) format (YYYY-MM-DD). */
    @field:JsonProperty("next_payment_due_date")
    val nextPaymentDueDate: java.time.LocalDate?

) : kotlin.collections.HashMap<String, kotlin.Any>()

