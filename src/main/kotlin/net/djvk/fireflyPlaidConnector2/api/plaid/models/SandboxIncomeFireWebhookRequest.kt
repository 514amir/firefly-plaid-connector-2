/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
 *
 * @param itemId The Item ID associated with the verification.
 * @param webhook The URL to which the webhook should be sent.
 * @param verificationStatus `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: The income verification has been sent to the user for review.
 * @param clientId Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @param secret Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 * @param userId The Plaid `user_id` of the User associated with this webhook, warning, or error.
 */

data class SandboxIncomeFireWebhookRequest(

    /* The Item ID associated with the verification. */
    @field:JsonProperty("item_id")
    val itemId: kotlin.String,

    /* The URL to which the webhook should be sent. */
    @field:JsonProperty("webhook")
    val webhook: kotlin.String,

    /* `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: The income verification has been sent to the user for review. */
    @field:JsonProperty("verification_status")
    val verificationStatus: VerificationStatus,

    /* Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body. */
    @field:JsonProperty("client_id")
    val clientId: kotlin.String? = null,

    /* Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body. */
    @field:JsonProperty("secret")
    val secret: kotlin.String? = null,

    /* The Plaid `user_id` of the User associated with this webhook, warning, or error. */
    @field:JsonProperty("user_id")
    val userId: kotlin.String? = null

) {

    /**
     * `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.  `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.  `VERIFICATION_STATUS_PENDING_APPROVAL`: The income verification has been sent to the user for review.
     *
     * Values: pROCESSINGCOMPLETE,pROCESSINGFAILED,pENDINGAPPROVAL
     */
    enum class VerificationStatus(val value: kotlin.String) {
        @JsonProperty(value = "VERIFICATION_STATUS_PROCESSING_COMPLETE")
        pROCESSINGCOMPLETE("VERIFICATION_STATUS_PROCESSING_COMPLETE"),
        @JsonProperty(value = "VERIFICATION_STATUS_PROCESSING_FAILED")
        pROCESSINGFAILED("VERIFICATION_STATUS_PROCESSING_FAILED"),
        @JsonProperty(value = "VERIFICATION_STATUS_PENDING_APPROVAL")
        pENDINGAPPROVAL("VERIFICATION_STATUS_PENDING_APPROVAL");
    }
}

