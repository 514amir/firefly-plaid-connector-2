/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * WalletTransactionExecuteRequest defines the request schema for `/wallet/transaction/execute`
 *
 * @param idempotencyKey A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.  The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed.
 * @param walletId The ID of the e-wallet to debit from
 * @param counterparty
 * @param amount
 * @param reference A reference for the transaction. This must be an alphanumeric string with at most 18 characters and must not contain any special characters or spaces. Ensure that the `reference` field is unique for each transaction.
 * @param clientId Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
 * @param secret Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
 */

data class WalletTransactionExecuteRequest(

    /* A random key provided by the client, per unique wallet transaction. Maximum of 128 characters.  The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. If a request to execute a wallet transaction fails due to a network connection error, then after a minimum delay of one minute, you can retry the request with the same idempotency key to guarantee that only a single wallet transaction is created. If the request was successfully processed, it will prevent any transaction that uses the same idempotency key, and was received within 24 hours of the first request, from being processed. */
    @field:JsonProperty("idempotency_key")
    val idempotencyKey: kotlin.String,

    /* The ID of the e-wallet to debit from */
    @field:JsonProperty("wallet_id")
    val walletId: kotlin.String,

    @field:JsonProperty("counterparty")
    val counterparty: WalletTransactionCounterparty,

    @field:JsonProperty("amount")
    val amount: WalletTransactionAmount,

    /* A reference for the transaction. This must be an alphanumeric string with at most 18 characters and must not contain any special characters or spaces. Ensure that the `reference` field is unique for each transaction. */
    @field:JsonProperty("reference")
    val reference: kotlin.String,

    /* Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body. */
    @field:JsonProperty("client_id")
    val clientId: kotlin.String? = null,

    /* Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body. */
    @field:JsonProperty("secret")
    val secret: kotlin.String? = null

)

