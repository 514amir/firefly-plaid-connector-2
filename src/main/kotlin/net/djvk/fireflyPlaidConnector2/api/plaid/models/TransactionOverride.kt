/**
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.164.8
 *
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package net.djvk.fireflyPlaidConnector2.api.plaid.models


import com.fasterxml.jackson.annotation.JsonProperty

/**
 * Data to populate as test transaction data. If not specified, random transactions will be generated instead.
 *
 * @param dateTransacted The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached. If a `date_transacted` is not provided by the institution, a transaction date may be available in the [`authorized_date`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-authorized-date) field.
 * @param datePosted The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions.
 * @param amount The transaction amount. Can be negative.
 * @param description The transaction description.
 * @param currency The ISO-4217 format currency code for the transaction.
 */

data class TransactionOverride(

    /* The date of the transaction, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Transactions in Sandbox will move from pending to posted once their transaction date has been reached. If a `date_transacted` is not provided by the institution, a transaction date may be available in the [`authorized_date`](https://plaid.com/docs/api/products/transactions/#transactions-get-response-transactions-authorized-date) field. */
    @field:JsonProperty("date_transacted")
    val dateTransacted: java.time.LocalDate,

    /* The date the transaction posted, in [ISO 8601](https://wikipedia.org/wiki/ISO_8601) (YYYY-MM-DD) format. Posted dates in the past or present will result in posted transactions; posted dates in the future will result in pending transactions. */
    @field:JsonProperty("date_posted")
    val datePosted: java.time.LocalDate,

    /* The transaction amount. Can be negative. */
    @field:JsonProperty("amount")
    val amount: kotlin.Double,

    /* The transaction description. */
    @field:JsonProperty("description")
    val description: kotlin.String,

    /* The ISO-4217 format currency code for the transaction. */
    @field:JsonProperty("currency")
    val currency: kotlin.String? = null

) : kotlin.collections.HashMap<String, kotlin.Any>()

